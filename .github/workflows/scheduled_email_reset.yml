name: Scheduled Email Reset

on:
  schedule:
    - cron: '*/30 * * * *'  # every 30 minutes (UTC)
  workflow_dispatch:        # manual trigger support

jobs:
  send_reset_emails:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download previous state artifact (if any)
      uses: actions/download-artifact@v4
      with:
        name: user_batch_state
        path: ./  # download to root so script can find user_batch_state.json
      continue-on-error: true  # if artifact doesn't exist, continue anyway

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run email reset script
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
        API_KEY: ${{ secrets.API_KEY }}
        API_SECRET: ${{ secrets.API_SECRET }}
      run: python send_reset_emails.py

    - name: Upload updated state artifact
      uses: actions/upload-artifact@v4
      with:
        name: user_batch_state
        path: user_batch_state.json
