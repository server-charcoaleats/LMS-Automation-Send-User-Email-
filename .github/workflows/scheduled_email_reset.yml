name: Scheduled Email Reset

on:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  workflow_dispatch:

jobs:
  send_reset_emails:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Download previous user_batch_state.json (if exists)
      uses: actions/download-artifact@v4
      with:
        name: user_batch_state
        path: .
      continue-on-error: true  # no artifact on first run

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install requests

    - name: Run email reset script
      run: python send_reset_emails.py
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
        API_KEY: ${{ secrets.API_KEY }}
        API_SECRET: ${{ secrets.API_SECRET }}

    - name: Upload updated user_batch_state.json
      if: always()  # always try to upload, even if script fails
      uses: actions/upload-artifact@v4
      with:
        name: user_batch_state
        path: user_batch_state.json
